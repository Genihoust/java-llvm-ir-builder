sudo: true
dist: trusty
cache:
    directories:
        - $HOME/.cache/pip
        - $HOME/.cache/travis
        - $HOME/.mx/cache
language: java
python:
    - "2.7"
addons:
    apt:
        sources:
            - deadsnakes
        packages:
            - libgmp3-dev
            - gcc-4.6
            - g++-4.6
            - gfortran-4.6
            - gobjc++-4.6
            - gcc-4.6-plugin-dev
            - libc++1
            - libc++abi1
            - libc++-dev
            - libc++abi-dev
env:
    global:
        # LLVM 3.8
        - LLVM_VERSION=3.8.0
        - LLVM_FILENAME=clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz
        - LLVM_ARCHIVE_PATH=$HOME/.cache/travis/$LLVM_FILENAME
        # Eclipse JDK
        - ECLIPSE_FILENAME=eclipse-jdk8-linux-x86_64.tar.gz
        - ECLIPSE_JDK_ARCHIVE_PATH=$HOME/.cache/travis/$ECLIPSE_FILENAME
        # ECJ
        - ECJ_VERSION=4.5.2
        - ECJ_FILENAME=ecj-$ECJ_VERSION.jar
        - ECJ_ARCHIVE_PATH=$HOME/.cache/travis/$ECJ_FILENAME
        # JVMCI
        - JVMCI_VERSION=0.23
        - JVMCI_FILENAME=jdk1.8.0_111-jvmci-$JVMCI_VERSION-linux-amd64.tar.gz
        - JVMCI_ARCHIVE_PATH=$HOME/.cache/travis/$JVMCI_FILENAME
before_install:
    # Print content of cached dirs
    - ls -l $HOME/.cache/pip
    - ls -l $HOME/.cache/travis
    - ls -l $HOME/.mx/cache
    # MDL
    - gem install mdl
    # LLVM 3.8
    - (cd $HOME/.cache/travis/; wget -N http://llvm.org/releases/$LLVM_VERSION/$LLVM_FILENAME)
    - mkdir $HOME/clang+llvm
    - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang+llvm --strip-components 1
    - export PATH=$HOME/clang+llvm/bin:$PATH
    # Eclipse JDK
    - (cd $HOME/.cache/travis/; wget -N https://lafo.ssw.uni-linz.ac.at/pub/sulong-deps/$ECLIPSE_FILENAME)
    - tar -xvzf $ECLIPSE_JDK_ARCHIVE_PATH -C $HOME
    - export ECLIPSE_EXE=$HOME/eclipse/eclipse
    # ECJ
    - (cd $HOME/.cache/travis/; wget -N https://lafo.ssw.uni-linz.ac.at/pub/sulong-deps/$ECJ_FILENAME)
    - export JDT=$ECJ_ARCHIVE_PATH
    # JVMCI
    - (cd $HOME/.cache/travis/; wget -nc https://github.com/dougxc/openjdk8-jvmci-builder/releases/download/jvmci-$JVMCI_VERSION/$JVMCI_FILENAME)
    - tar -xzf $JVMCI_ARCHIVE_PATH -C $HOME
    - export JAVA_HOME=$HOME/jdk1.8.0_111-jvmci-$JVMCI_VERSION
install:
    # Some python libraries
    - pip install astroid==1.1.0 --user
    - pip install pylint==1.1.0 --user
    # MX
    - git clone https://github.com/graalvm/mx.git
    - export PATH=`pwd`/mx:$PATH
    - export MX_BINARY_SUITES="jvmci"
    - export DEFAULT_VM=server
script:
    - $BUILD_COMMAND
    - $TEST_COMMAND
matrix:
    fast_finish: true
    include:
        # Basic checks
        - env: BUILD_COMMAND='' TEST_COMMAND='mx su-checks httpcheck checkstyle mdl eclipseformat pylint ecj canonicalizeprojects checkoverlap --verbose'
          jdk: oraclejdk8
        # LLVM 3.2 testcases
        - env: BUILD_COMMAND='mx build' TEST_COMMAND='mx irbuilder-test32 sulong nwcc llvm'
          jdk: oraclejdk8
        # LLVM 3.8 testcases
        - env: BUILD_COMMAND='mx build' TEST_COMMAND='mx irbuilder-test38 sulong nwcc llvm'
          jdk: oraclejdk8
        # LLVM 3.2 - GCC testcases
        - env: BUILD_COMMAND='mx build' TEST_COMMAND='mx irbuilder-test38 gcc'
          jdk: oraclejdk8
    allow_failures:
        - env: BUILD_COMMAND='mx build' TEST_COMMAND='mx irbuilder-test38 gcc'
          jdk: oraclejdk8
